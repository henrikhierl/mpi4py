name: ci

on:
  push:
    branches:
      - master
      - maint
      - ci/all
      - ci/github
  pull_request:
    branches:
      - master
      - maint
  workflow_dispatch:

jobs:

  linux-mpich:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: ubuntu-20.04
      mpi: mpich

  linux-openmpi:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: ubuntu-20.04
      mpi: openmpi

  macos-mpich:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: macos-11
      mpi: mpich

  macos-openmpi:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: macos-11
      mpi: openmpi

  windows-msmpi:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: windows-2022
      mpi: msmpi

  lint:
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v3
      with:
        python-version: 3

    - name: Install package
      run:  python -m pip install .
      env:
        MPICFG: nompi

    - name: Install lint dependencies
      run:  python -m pip install
              pycodestyle
              pydocstyle
              flake8
              pylint
              mypy

    - name: pycodestyle
      run:  pycodestyle src/mpi4py

    - name: pydocstyle
      run:  pydocstyle src/mpi4py

    - name: flake8
      run:  flake8 src/mpi4py

    - name: pylint
      run:  pylint mpi4py

    - name: mypy (stubtest)
      run:  stubtest mpi4py
              --mypy-config-file=conf/mypy.ini

    - name: mypy (typecheck)
      run:  mypy -p mpi4py
              --config-file=conf/mypy.ini

  skbuild:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
        mpi:
          - mpich
          - openmpi
        py:
          - 3

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup MPI (${{ matrix.mpi }})
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Use Python ${{ matrix.py }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.py }}

    - name: Install packaging tools
      run:  python -m pip install build

    - name: Build sdist
      run:  python -m build -s

    - name: Unpack sdist
      run:  |
        mkdir /tmp/mpi4py
        tar -zxf dist/mpi4py-*.tar.gz -C /tmp/mpi4py

    - name: Build wheel
      run:  python -m build -o dist -w /tmp/mpi4py/mpi4py-*
      env:
        MPI4PY_BUILD_BACKEND: skbuild
        MPI4PY_LOCAL_VERSION: ${{ matrix.mpi }}

    - name: Install wheel
      run:  python -m pip install --no-index --find-links=dist mpi4py

    - name: Test wheel after install
      run:  mpiexec -n 2 python -m mpi4py.bench helloworld

    - name: Uninstall wheel after testing
      run:  python -m pip uninstall --yes mpi4py

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: mpi4py-skbuild-${{ matrix.os }}
        path: dist/mpi4py-*.whl
